// server.js
const express = require('express');
const app = express();
const { exec } = require('child_process');

// ุชุนููู ูููุฐ ูุฎุชูู ููุฎุงุฏู ุงูุฑุฆูุณู
const port = process.env.SERVER_PORT || 4000; // ุงุณุชุฎุฏุงู ูููุฐ 4000 ุจุฏูุงู ูู 3000

// ุฏุงูุฉ ุชูุธูู ุงูุฐุงูุฑุฉ
function cleanCache() {
    const date = new Date().toLocaleString();
    console.log(`[${date}] ุจุฏุก ุนูููุฉ ุชูุธูู ุงูุฐุงูุฑุฉ ุงูุชุฎุฒูููุฉ...`);
    
    exec('rm -rf .cache/* .git/*', {
        cwd: process.cwd()
    }, (error, stdout, stderr) => {
        if (error) {
            console.error('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุชูุธูู:', error);
            return;
        }
        console.log(`[${date}] ุชู ุชูุธูู ุงูุฐุงูุฑุฉ ุงูุชุฎุฒูููุฉ ุจูุฌุงุญ`);
    });
}

// ุชุดุบูู ุงูุจูุช
const startBot = () => {
    try {
        require('./index.js');
        console.log('ุชู ุชุดุบูู ุงูุจูุช ุจูุฌุงุญ');
    } catch (error) {
        console.error('ุฎุทุฃ ูู ุชุดุบูู ุงูุจูุช:', error);
    }
};

// ุฅูุดุงุก ูุณุงุฑ ุจุณูุท ูุฅุจูุงุก ุงูุฎุงุฏู ูุดุทุงู
app.get('/', (req, res) => {
    res.send('ุงูุฎุงุฏู ูุนูู! ๐');
});

// ุฅุถุงูุฉ ูุณุงุฑ ูุนุฑุถ ุญุงูุฉ ุงูุชูุธูู
app.get('/status', (req, res) => {
    res.json({
        status: 'running',
        lastCleanup: new Date().toLocaleString()
    });
});

// ุจุฏุก ุชุดุบูู ุงูุฎุงุฏู
app.listen(port, () => {
    console.log(`ุงูุฎุงุฏู ุงูุฑุฆูุณู ูุนูู ุนูู ุงููููุฐ ${port}`);
    
    // ุชุดุบูู ุงูุจูุช
    startBot();
    
    // ุชูุธูู ุงูุฐุงูุฑุฉ ุนูุฏ ุจุฏุก ุงูุชุดุบูู
    cleanCache();
    
    // ุฌุฏููุฉ ุชูุธูู ุงูุฐุงูุฑุฉ ูู 5 ุณุงุนุงุช
    setInterval(cleanCache, 5 * 60 * 60 * 1000);
});

// ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ุบูุฑ ุงููุชููุนุฉ
process.on('uncaughtException', (err) => {
    console.error('ุฎุทุฃ ุบูุฑ ูุชููุน:', err);
    // ูุง ูุฑูุฏ ุฅููุงู ุงูุชุทุจูู ูู ุญุงูุฉ ุญุฏูุซ ุฎุทุฃ
});

process.on('unhandledRejection', (err) => {
    console.error('ุฑูุถ ูุนุฏ ุบูุฑ ูุนุงูุฌ:', err);
    // ูุง ูุฑูุฏ ุฅููุงู ุงูุชุทุจูู ูู ุญุงูุฉ ุญุฏูุซ ุฎุทุฃ
});
